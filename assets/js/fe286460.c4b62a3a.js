"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[710],{8207:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"installation/start","title":"Start","description":"Prerequisitives","source":"@site/docs/installation/start.md","sourceDirName":"installation","slug":"/installation/start","permalink":"/docs/installation/start","draft":false,"unlisted":false,"editUrl":"https://github.com/clearlydefined/clearlydefined/tree/main/docs/installation/start.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"layout":"default","sidebar_position":1,"title":"Start"},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/docs/installation/"},"next":{"title":"Containers","permalink":"/docs/installation/containers"}}');var r=t(4848),i=t(8453);const s={layout:"default",sidebar_position:1,title:"Start"},l="Getting Started",a={},d=[{value:"Prerequisitives",id:"prerequisitives",level:2},{value:"Cloning repositories",id:"cloning-repositories",level:2},{value:"Setting up environmental variables",id:"setting-up-environmental-variables",level:2},{value:"Additional Setup for GitHub curation(Optional)",id:"additional-setup-for-github-curationoptional",level:2},{value:"Debugging",id:"debugging",level:2},{value:"Debug service",id:"debug-service",level:3},{value:"Debug Crawler",id:"debug-crawler",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,r.jsx)(n.h2,{id:"prerequisitives",children:"Prerequisitives"}),"\n",(0,r.jsx)(n.p,{children:"To run this environment, you need to install"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.docker.com/",children:"Docker"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.docker.com/compose/",children:"Docker Compose"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"cloning-repositories",children:"Cloning repositories"}),"\n",(0,r.jsx)(n.p,{children:"Start off by cloning the following repository."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ git clone git@github.com:clearlydefined/docker_dev_env_experiment.git\n"})}),"\n",(0,r.jsx)(n.p,{children:"Change into that directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ cd docker_dev_env_experiment\n"})}),"\n",(0,r.jsx)(n.p,{children:"I prefer to clone my copies of the ClearlyDefined repos into this directory as well"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ git clone git@github.com:clearlydefined/website.git\n$ git clone git@github.com:clearlydefined/service.git\n$ git clone git@github.com:clearlydefined/crawler.git\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Alternately, you can edit the ",(0,r.jsx)(n.strong,{children:"docker-compose.yml"})," file to point to where you have those repos cloned on your local system:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"docker-compose.yml"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'version: "3.8"\nservices:\n  web:\n    build:\n      context: <path-to-website-repo-on-your-system>\n      dockerfile: DevDockerfile\n    ports:\n      - "3000:3000"\n    stdin_open: true\n  service:\n    build:\n      context: <path-to-service-repo-on-your-system>\n      dockerfile: DevDockerfile\n    ports:\n      - "4000:4000"\n    env_file: .env\n    volumes:\n      - ./harvested_data:/tmp/harvested_data/\n    links:\n      - clearlydefined_mongo_db\n      - crawler\n  crawler:\n    build:\n      context: <path-to-crawler-repo-on-your-system>\n      dockerfile: DevDockerfile\n    env_file: .env\n    volumes:\n      - ./harvested_data:/tmp/harvested_data/\n    ports:\n      - "5000:5000"\n'})}),"\n",(0,r.jsx)(n.p,{children:"If you are using a Mac computer and your CPU does not have a AVX support, please change the version of Mongo from 5.0.6 to 4.4.28 in docker-compose.yml file."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'clearlydefined_mongo_db:\n    image: "mongo:4.4.28"\n    ports:\n      - "27017:27017"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"setting-up-environmental-variables",children:"Setting up environmental variables"}),"\n",(0,r.jsxs)(n.p,{children:["This environment handles environmental variables a little differently from the ",(0,r.jsx)(n.a,{href:"https://docs.clearlydefined.io/contributing-code",children:"historical ClearlyDefined dev environment instructions"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The docker-compose.yml file loads environmental variables from a ",(0,r.jsx)(n.strong,{children:".env"})," file."]}),"\n",(0,r.jsxs)(n.p,{children:["To set this up, copy the ",(0,r.jsx)(n.strong,{children:"sample_env"})," file in this repo to ",(0,r.jsx)(n.strong,{children:".env"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ cp sample_env .env\n"})}),"\n",(0,r.jsx)(n.p,{children:"And add in appropriate values to the .env file:"}),"\n",(0,r.jsxs)(n.p,{children:["(You will need a ",(0,r.jsx)(n.a,{href:"https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token",children:"GitHub token"})," with minimal permissions)"]}),"\n",(0,r.jsx)(n.p,{children:"(You can use the same GitHub token for both CURATION_GITHUB_TOKEN and CRAWLER_GITHUB_TOKEN)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:".env"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Curation GitHub Info\nCURATION_GITHUB_BRANCH="master"\nCURATION_GITHUB_OWNER="clearlydefined"\nCURATION_GITHUB_REPO="curated-data-dev"\nCURATION_GITHUB_TOKEN="<your GitHub token>"\n\n# GitLab info\nGITLAB_TOKEN="<your GitLab token (unless you are working on code that interacts with the GitLab API, this can be a random string of characters)>\n\n# Curation Store Info\nCURATION_MONGO_CONNECTION_STRING="mongodb://clearlydefined_mongo_db"\nCURATION_MONGO_DB_NAME="clearlydefined"\nCURATION_MONGO_COLLECTION_NAME="curations"\nCURATION_PROVIDER="github"\nCURATION_STORE_PROVIDER="mongo"\n\n# Definition Store Info\nDEFINITION_STORE_PROVIDER="mongo"\nDEFINITION_MONGO_CONNECTION_STRING="mongodb://clearlydefined_mongo_db"\nDEFINITION_MONGO_DB_NAME="clearlydefined"\nDEFINITION_MONGO_COLLECTION_NAME="definitions-paged"\n\n# Harvest Store Info\nHARVEST_STORE_PROVIDER="file"\n\n# Note - this is mounted as a volume\n# into the container for the\n# ClearlyDefined service\n# see docker-compose.yml for more details\nFILE_STORE_LOCATION="/tmp/harvested_data"\n\n# Crawler Info\nCRAWLER_API_URL="http://crawler:5000"\nCRAWLER_GITHUB_TOKEN="<your GitHub token>"\nCRAWLER_DEADLETTER_PROVIDER=cd(file)\nCRAWLER_NAME=cdcrawlerlocal\nCRAWLER_QUEUE_PROVIDER=memory\nCRAWLER_STORE_PROVIDER=cd(file)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Now, from withing your ",(0,r.jsx)(n.strong,{children:"docker_dev_env_experiment"})," directory, run:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ docker-compose build\n$ docker-compose up\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"NOTE: If you have an issue seeding, prune all volumes, containers, and images then try again."})}),"\n",(0,r.jsxs)(n.p,{children:["And head to ",(0,r.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})," to see your running website UI along with some seeded data!"]}),"\n",(0,r.jsx)(n.p,{children:"You can also query the service API with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:4000\n"})}),"\n",(0,r.jsx)(n.h2,{id:"additional-setup-for-github-curationoptional",children:"Additional Setup for GitHub curation(Optional)"}),"\n",(0,r.jsx)(n.p,{children:"If you want to work with curation on GitHub, you could follow these steps"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Fork ",(0,r.jsx)(n.a,{href:"https://github.com/clearlydefined/curated-data-dev",children:"curated-data-dev"})," into your own GitHub account and modify the .env file.","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'CURATION_GITHUB_OWNER="<your own GitHub account>"\nCURATION_GITHUB_REPO="curated-data-dev"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["In order to get GitHub webhook events, a http forwarding proxy is needed. Here ",(0,r.jsx)(n.a,{href:"https://ngrok.com/download",children:"ngrok"})," has been used. Run ",(0,r.jsx)(n.code,{children:"ngrok http http://localhost:4000"}),". You will see something similar to this","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Session Status                online\nSession Expires               1 hour, 59 minutes\nVersion                       2.3.35\nRegion                        United States (us)\nWeb Interface                 http://127.0.0.1:4040\nForwarding                    http://83f8ddfb177b.ngrok.io -> http://localhost:4000\nForwarding                    https://83f8ddfb177b.ngrok.io -> http://localhost:4000\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Then you could create a webhook in your forked curate-data repository. Use ",(0,r.jsx)(n.code,{children:"<ngrok forwarding url(prefer https one)>/webhook"})," as the webhook payload URL. And put 'secret' as the webhook secret."]}),"\n",(0,r.jsxs)(n.li,{children:["You could verify Github webhook events with ",(0,r.jsx)(n.code,{children:"ngrok"})," management UI, ",(0,r.jsx)(n.a,{href:"http://localhost:4040",children:"http://localhost:4040"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"debugging",children:"Debugging"}),"\n",(0,r.jsxs)(n.p,{children:["After running ",(0,r.jsx)(n.code,{children:"docker-compose up"}),", you could attach debuggers to the running containers for service and crawler."]}),"\n",(0,r.jsx)(n.h3,{id:"debug-service",children:"Debug service"}),"\n",(0,r.jsxs)(n.p,{children:["Open the folder to the local clone of ",(0,r.jsx)(n.a,{href:"https://github.com/clearlydefined/crawler",children:"crawler"})," with vscode. Choose ",(0,r.jsx)(n.code,{children:"Docker: Attach to Node"})," and run debug."]}),"\n",(0,r.jsx)(n.h3,{id:"debug-crawler",children:"Debug Crawler"}),"\n",(0,r.jsxs)(n.p,{children:["Open the folder to the local clone of ",(0,r.jsx)(n.a,{href:"https://github.com/clearlydefined/service",children:"service"})," with vscode. Choose ",(0,r.jsx)(n.code,{children:"Attach to Docker"})," and run debug."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var o=t(6540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);