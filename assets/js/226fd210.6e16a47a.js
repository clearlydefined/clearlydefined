"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[5518],{8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var o=t(6540);const i={},r=o.createContext(i);function a(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:n},e.children)}},9585:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"installation/using","title":"Using","description":"As noted above, you can start all of the containers with:","source":"@site/docs/installation/using.md","sourceDirName":"installation","slug":"/installation/using","permalink":"/docs/installation/using","draft":false,"unlisted":false,"editUrl":"https://github.com/clearlydefined/clearlydefined/tree/main/docs/installation/using.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"layout":"default","sidebar_position":3,"title":"Using"},"sidebar":"tutorialSidebar","previous":{"title":"Containers","permalink":"/docs/installation/containers"},"next":{"title":"Curation","permalink":"/docs/curation/"}}');var i=t(4848),r=t(8453);const a={layout:"default",sidebar_position:3,title:"Using"},s="Using the containers",c={},l=[{value:"Rebuilding after changes",id:"rebuilding-after-changes",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Stopping containers",id:"stopping-containers",level:2},{value:"Attaching to a container",id:"attaching-to-a-container",level:2},{value:"Running only certain containers",id:"running-only-certain-containers",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"using-the-containers",children:"Using the containers"})}),"\n",(0,i.jsx)(n.p,{children:"As noted above, you can start all of the containers with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ docker-compose up\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will show all of the logs from all of the container in your current shell."}),"\n",(0,i.jsx)(n.h2,{id:"rebuilding-after-changes",children:"Rebuilding after changes"}),"\n",(0,i.jsx)(n.p,{children:"When you make changes to one of the code bases, you do need to rebuild the Docker images."}),"\n",(0,i.jsx)(n.p,{children:"If you were to make a change to the website, and want to rebuild only that container, you can do so by running:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ docker-compose up --detach --build web\n"})}),"\n",(0,i.jsx)(n.p,{children:"The same will work for the service and the crawler:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ docker-compose up --detach --build service\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"$ docker-compose up --detach --build crawler\n"})}),"\n",(0,i.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsxs)(n.p,{children:["When you look at a definition in the UI and create a curation (this uses the API call PATCH /curations), the curation WILL be opened\nas a pull request on the ",(0,i.jsx)(n.a,{href:"https://github.com/clearlydefined/curated-data-dev",children:"curated-data-dev"}),', but you will not see it\nunder the "Curations" section when you refresh the definition\'s page.']}),"\n",(0,i.jsx)(n.p,{children:"In the Azure dev and production environment, creating a curation will open a PR on the appropriate github curated-data repo,\nand then, once the pull request is open, GitHub will then use a webhook."}),"\n",(0,i.jsx)(n.p,{children:"The webhook will POST to an Azure logic app. That app will then put the curation on the Azure storage queue, which is how it will\nend up in the curation store (in this case, mongo)."}),"\n",(0,i.jsxs)(n.p,{children:["I haven't yet figured out a way to do this without an Azure logic app (but will continue looking into this). I did try\ncreating a GitHub webhook to POST to ",(0,i.jsx)(n.a,{href:"http://localhost:4000",children:"http://localhost:4000"}),", but GitHub requires that the webhooks it POSTs to be\naccessible over the public internet."]}),"\n",(0,i.jsx)(n.p,{children:"When I figure out a solution, I will update this README."}),"\n",(0,i.jsx)(n.h2,{id:"stopping-containers",children:"Stopping containers"}),"\n",(0,i.jsxs)(n.p,{children:["You can stop and destroy the containers in the shell where you ran ",(0,i.jsx)(n.code,{children:"docker-compose up"})," with CTRL c."]}),"\n",(0,i.jsxs)(n.p,{children:["You can also do this through the ",(0,i.jsx)(n.a,{href:"https://www.docker.com/products/docker-desktop",children:"Docker desktop client"})," or through the ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/commandline/cli/",children:"Docker CLI"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Note that in order to re-seed the database you must completely destroy the containers (this can also be done through both the Desktop client and the CLI)."}),"\n",(0,i.jsx)(n.h2,{id:"attaching-to-a-container",children:"Attaching to a container"}),"\n",(0,i.jsxs)(n.p,{children:["You can attach to a container either through using the ",(0,i.jsx)(n.a,{href:"https://www.docker.com/products/docker-desktop",children:"Docker desktop client"})," or the ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/commandline/attach/",children:"Docker CLI"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"running-only-certain-containers",children:"Running only certain containers"}),"\n",(0,i.jsx)(n.p,{children:"You can choose to run or not run any of the containers listed in [docker-compose.yml]. If you don't wish to run one of the containers, comment it out like this:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"docker-compose.yml"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'version: "3.8"\nservices:\n#  web:\n#    build:\n#      context: <path-to-website-repo-on-your-system>\n#      dockerfile: DevDockerfile\n#    ports:\n#      - "3000:3000"\n#    stdin_open: true\n  service:\n    build:\n      context: <path-to-service-repo-on-your-system>\n      dockerfile: DevDockerfile\n    ports:\n      - "4000:4000"\n    env_file: .env\n    volumes:\n      - ./harvested_data:/tmp/harvested_data/\n    links:\n      - clearlydefined_mongo_db\n      - crawler\n  crawler:\n    build:\n      context: <path-to-crawler-repo-on-your-system>\n      dockerfile: DevDockerfile\n    env_file: .env\n    volumes:\n      - ./harvested_data:/tmp/harvested_data/\n    ports:\n      - "5000:5000"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If you run ",(0,i.jsx)(n.code,{children:"docker-compose up"})," after making these changes to the file, it will start all containers except the web container."]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);